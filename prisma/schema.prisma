// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model School {
  id       Int      @id @default(autoincrement())
  name     String
  location String
  groups   Group[]  // Relación uno a muchos con grupos
  admins   Admin[]  // Relación uno a muchos con admins
  events   Event[]  // Relación uno a muchos con eventos
}

model Event {
  id        Int      @id @default(autoincrement())
  name      String
  description String
  date      DateTime
  location  String
  imageUrl String?  // Campo para la URL de la imagen
  school    School   @relation(fields: [school_id], references: [id]) // Relación muchos a uno con school
  school_id Int
  teacher   Teacher  @relation(fields: [teacher_id], references: [id]) // Relación muchos a uno con teacher
  teacher_id Int
  //adyuame a crear un campo mas para anadir una imagen en el evento
}

model Admin {
  id       Int      @id @default(autoincrement())
  name     String
  email    String   @unique
  password String   
  school   School   @relation(fields: [school_id], references: [id]) // Relación muchos a uno con school
  school_id Int
}

model Group {
  id        Int       @id @default(autoincrement())
  name      String
  school    School?    @relation(fields: [school_id], references: [id])
  school_id  Int?
  students  Student[] // Relación uno a muchos con estudiantes
  teacher   Teacher?  @relation
}
model Student {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
  group_id Int?
  imageUrl String?  // Campo para la URL de la imagen
  Group    Group?   @relation(fields: [group_id], references: [id])
}

model Teacher {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String 
  Group    Group? @relation(fields: [group_id], references: [id])
  group_id Int?   @unique
  events   Event[] // Relación uno a muchos con eventos
}


