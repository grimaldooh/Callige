// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL1")
}

model School {
  id       Int      @id @default(autoincrement())
  name     String
  location String
  groups   Group[]  // Relación uno a muchos con grupos
  admins   Admin[]  // Relación uno a muchos con admins
  teachers Teacher[]  // Relación uno a muchos con profesores
  students Student[]  // Relación uno a muchos con estudiantes
  events   Event[]  // Relación uno a muchos con eventos
}

model Event {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  date        DateTime
  location    String
  imageUrl    String?  // Campo para la URL de la imagen
  school      School   @relation(fields: [school_id], references: [id]) // Relación muchos a uno con school
  school_id   Int
  teachers    Teacher[] // Relación uno a muchos con profesores
  students    Student[] // Relación uno a muchos con estudiantes
  attendanceList  AttendanceList?  @relation("EventToAttendanceList")
}

model AttendanceList {
  id        Int      @id @default(autoincrement())
  fecha     DateTime
  materia   String
  grupo     Group?    @relation(fields: [group_id], references: [id]) // Relación muchos a uno con grupo
  group_id  Int?
  attendances Attendance[] // Relación uno a muchos con las asistencias de los estudiantes
  event       Event?     @relation(fields: [eventId], references: [id], name: "EventToAttendanceList")
  eventId     Int?       @unique
}
model Admin {
  id       Int      @id @default(autoincrement())
  name     String
  email    String   @unique
  password String   
  school   School   @relation(fields: [school_id], references: [id]) // Relación muchos a uno con school
  school_id Int
}

model Group {
  id        Int          @id @default(autoincrement())
  name      String
  imageUrl  String?      // Campo para la URL de la imagen 
  max_absences Int?
  school    School?       @relation(fields: [school_id], references: [id])
  school_id Int?
  students  Student[]     @relation("GroupStudents") // Relación muchos a muchos con estudiantes
  teachers  Teacher[]     @relation("GroupTeachers") // Relación muchos a muchos con profesores
  attendanceLists AttendanceList[]  // Relación uno a muchos con listas de asistencia
  justificantes Justificante[]  // Relación uno a muchos con justificantes
}

model Attendance {
  id             Int      @id @default(autoincrement())
  attendanceList AttendanceList @relation(fields: [attendanceList_id], references: [id])
  attendanceList_id Int
  student        Student  @relation(fields: [student_id], references: [id]) // Relación muchos a uno con estudiantes
  student_id     Int
  present        Int  // Indica si el estudiante asistió o no
  justificante   Justificante?
  justificante_id Int? // Relación uno a uno con Justificante (puede ser null)
}

model Justificante {
  id          Int      @id @default(autoincrement())
  razon       String
  fecha       DateTime @default(now())
  descripcion String
  imageUrl    String?  // Este campo es opcional
  student     Student  @relation(fields: [student_id], references: [id])
  student_id  Int
  group       Group    @relation(fields: [group_id], references: [id])
  group_id    Int
  attendance  Attendance @relation(fields: [attendance_id], references: [id])
  attendance_id Int @unique  // Relación uno a uno con Attendance (debe ser único)
  status      Int?
}

model Student {
  id       Int      @id @default(autoincrement())
  name     String
  email    String   @unique
  password String
  enableNotifications Boolean? @default(false)
  status   Int?
  imageUrl String?  
  imageUrl2 String?
  groups   Group[]  @relation("GroupStudents") // Relación muchos a muchos con grupos
  attendances Attendance[] // Relación uno a muchos con las asistencias
  events   Event[]  // Relación uno a muchos con eventos
  justificantes Justificante[]  // Relación uno a muchos con justificantes
  school   School   @relation(fields: [school_id], references: [id]) // Relación muchos a uno con school
  school_id Int
}

model Teacher {
  id       Int      @id @default(autoincrement())
  name     String
  email    String   @unique
  password String
  groups   Group[]  @relation("GroupTeachers") // Relación muchos a muchos con grupos
  events   Event[]  // Relación uno a muchos con eventos
  school   School   @relation(fields: [school_id], references: [id]) // Relación muchos a uno con school
  school_id Int
}

model Superadmin {
  id       Int      @id @default(autoincrement())
  name     String
  email    String   @unique
  password String
}




